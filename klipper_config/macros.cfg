#############################################
# START_PRINT and END_PRINT
#############################################

[gcode_macro START_PRINT]
gcode: 
    {% set BED_TEMP = params.BED_TEMP|default(100)|int %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(250)|int %}
    {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}

    SET_PRESSURE_ADVANCE ADVANCE=0.03                       ; eSun ABS+
    #SET_PRESSURE_ADVANCE ADVANCE=0.025                      ; Sunlu ABS    
    BED_MESH_CLEAR                                          ; clear saved bed mesh
    LIGHTS_WHITE                                            ; Lights
    STATUS_READY                                            ; SB Status lights
    G90                                                     ; absolute positioning
    G21                                                     ; metric values
    M82                                                     ; set extruder to absolute mode
    M107                                                    ; start with the fan off
    STATUS_HEATING                                          ; SB Status lights
    M140 S{BED_TEMP}                                        ; Start heating the bed
    M104 S175			                                    ; start heating hot end 175deg
    G0 X123.5 Y100 Z30 F5000                                ; move X/Y/Z to park position
    M190 S{BED_TEMP}                                        ; wait for bed
    M109 S175			                                    ; wait for hot end
    STATUS_HOMING                                           ; SB Status lights
    #G28                                                     ; Home all axes     
    G90                                                     ; absolute positioning     
    STATUS_MESHING                                          ; SB Status lights
    COMPUTE_MESH_PARAMETERS SIZE={FL_SIZE}
    PROBE_IN
    ADAPTIVE_BED_MESH     
    PROBE_OUT
    #AUTO_BED_MESH
    #BED_MESH_CALIBRATE                                      ; * bed mesh calibration  
    G0 X123.5 Y100 Z30 F8000                                ; move X/Y/Z to park position
    STATUS_HEATING                                          ; SB Status lights 
    M104 S{EXTRUDER_TEMP}                                   ; start heating the hot end
    M109 S{EXTRUDER_TEMP}                                   ; wait for hotend
    {% if BED_TEMP|int() >= '90'|int() %}
        NEVERMORE_ON SPEED=0.6                              ; Nevermore airfilter ON (60%, ABS only)
    {% endif %}
    G4 P30000                                               ; waiting time for heating up the hotend in ms (60.000 -> 1min)
    STATUS_PRINTING                                         ; SB Status lights
    STATUS_PRINTING                                         ; SB Status lights
    #G28 Z0                                                  ; Home Z (all axis because of HOMING_OVERIDE)
    G92 E0                                                  ; zero the extruded length
    G0 X90 Y0.5 Z0.3 F5000                                  ; startposition for wipe, nozzle hight 0.15mm (X! ->left Clamp!)
    G1 X140 E25 F500                                        ; Extrude 25mm of filament in a 5cm line.
    G92 E0                                                  ; zero the extruded length again
    G1 E-0.2 F500                                           ; Retract a little
    G1 X200 F5000                                           ; Quickly wipe away from the filament line  
    STATUS_PRINTING                                         ; SB Status lights

[gcode_macro END_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(100)|int %}
    STATUS_BUSY                                             ; SB Status lights
    M104 S0                                                 ; Extruder off
    M140 S0                                                 ; Heatbed off
    M107                                                    ; Fan off
    G91                                                     ; relative positioning
    G1 E-2 F300                                             ; retract a little
    G1 Z+20  		                                        ; lift print head
    G90                                                     ; absolute positioning
    G0 X123.5 Y10 F8000                                     ; rear park position
    M106 S255                                               ; part fan 100%
    LIGHTS_PURPLE                                           ; Lights
    {% if BED_TEMP|int() >= '90'|int() %}
        NEVERMORE_ON SPEED=1                                ; Nevermore airfilter Full speed
        UPDATE_DELAYED_GCODE ID=D_NEVERMORE_OFF DURATION=600 ; 600s -> 10min; Nevermore airfilter OFF
    {% else %}
        UPDATE_DELAYED_GCODE ID=D_NEVERMORE_OFF DURATION=1  ; 0s -> 0min; Nevermore airfilter OFF    
    {% endif %}




#############################################
# CANCEL_PRINT
#############################################

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    {% set X = params.X|default(240)|int %}
    {% set Y = params.Y|default(220)|int %}
    {% set Z = params.Z|default(10)|int %}
    {% set BED_TEMP = params.BED_TEMP|default(100)|int %}
    LIGHTS_RED                                              ; Lights
    STATUS_BUSY                                             ; SB Status lights
    M104 S0
    M140 S0
    M141 S0
    M106 S0
    CLEAR_PAUSE
    RESET_SD
    BASE_CANCEL_PRINT
    G91                                                     ; relative positioning
    G1 E-2 F300                                             ; retract a little
    G1 Z+20  		                                        ; lift print head
    G90                                                     ; absolute positioning
    {% if BED_TEMP|int() >= '90'|int() %}
        NEVERMORE_ON SPEED=1                                ; Nevermore airfilter Full speed
        UPDATE_DELAYED_GCODE ID=D_NEVERMORE_OFF DURATION=600 ; 600s -> 10min; Nevermore airfilter OFF
    {% else %}
        UPDATE_DELAYED_GCODE ID=D_NEVERMORE_OFF DURATION=1  ; 0s -> 0min; Nevermore airfilter OFF    
    {% endif %}



#############################################
# PAUSE
#############################################

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    {% set X = params.X|default(123.5)|int %}
    {% set Y = params.Y|default(5)|int %}
    {% set Z = params.Z|default(10)|int %}
    STATUS_BUSY
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    #G1 E-1.7 F2100
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F5000
    G91



#############################################
# RESUME
#############################################

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    G91
    #G1 E1.7 F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    STATUS_PRINTING
    BASE_RESUME



#############################################
# LOAD & UNLOAD FILAMENT
#############################################

[gcode_macro LOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(500) %}
    G91
    G1 E75 F{speed}
    G1 E10 F100
    G92

[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(500) %}
    G91
    G1 E3 F100
    G1 E-75 F{speed}
    G92



#############################################
# Nevermore Filter
#############################################

[gcode_macro NEVERMORE_ON]
gcode:
  {%set SPEED = params.SPEED|default(1)|float %}
  SET_FAN_SPEED FAN=nevermore SPEED={SPEED}

[gcode_macro NEVERMORE_OFF]
gcode:
  SET_FAN_SPEED FAN=nevermore SPEED=0

[delayed_gcode D_NEVERMORE_OFF]
gcode:
  SET_FAN_SPEED FAN=nevermore SPEED=0
  M106 S0                                                 ; part fan OFF
  G90                                                     ; absolute positioning
  G0 X10 Y220 F8000                                       ; push bed forward to extract printed part
  M84                                                     ; disable stepper motors
  LIGHTS_GREEN
  STATUS_READY                                            ; SB Status lights




#############################################
# G29 - BED_MESH_CALIBRATE
#############################################

[gcode_macro G29]
gcode:
    BED_MESH_CALIBRATE



#############################################
# M18 - DISABLE_MOTORS
#############################################

[gcode_macro DISABLE_MOTORS]
gcode:
    M18



#############################################
# M205 - Dummy to Ignore M205 Commands (Cura)
#############################################

[gcode_macro M205]
gcode:
    G4




#############################################
# M600 - Filament Change
#############################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[gcode_macro M600]
gcode:
    {% set E = params.E|default(50)|float %}
    {% set X = params.X|default(123.5)|float %}
    {% set Y = params.Y|default(5)|float %}
    {% set Z = params.Z|default(30)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    STATUS_BUSY                                             ; SB Status lights
    PAUSE
    G91
    #G1 E-.5 F2700
    G1 Z30 #{Z}
    G90
    G1 X123.5 Y5 F5000 #{X} {Y} F3000
    #G91
    #G1 E-50 F1000 #{-E} F1000
    #G90
    STATUS_PRINTING                                         ; SB Status lights    
    RESTORE_GCODE_STATE NAME=M600_state



#############################################
# M900 - Linear Advance / Pressure Advance
#############################################
# Convert Marlin linear advance (M900) commands to Klipper (SET_PRESSURE_ADVANCE) commands.
# Used in conjunction with Marlin's linear advance calibration tool: 
# https://marlinfw.org/tools/lin_advance/k-factor.html
[gcode_macro M900]
gcode:
	# Parameters
	{% set pa = params.K|float %}
	
	SET_PRESSURE_ADVANCE ADVANCE={pa}



#############################################
# Lights
#############################################

[gcode_macro LIGHTS_WHITE]
gcode:
    SET_LED LED=Lights RED=1 GREEN=1 BLUE=1 TRANSMIT=1

[gcode_macro LIGHTS_OFF]
gcode:
    SET_LED LED=Lights RED=0 GREEN=0 BLUE=0 TRANSMIT=1

[gcode_macro LIGHTS_GREEN]
gcode:
    SET_LED LED=Lights RED=0 GREEN=1 BLUE=0 TRANSMIT=1 

[gcode_macro LIGHTS_ORANGE]
gcode:
    SET_LED LED=Lights RED=1 GREEN=0.5 BLUE=0 TRANSMIT=1

[gcode_macro LIGHTS_RED]
gcode:
    SET_LED LED=Lights RED=1 GREEN=0 BLUE=0 TRANSMIT=1

[gcode_macro LIGHTS_PURPLE]
gcode:
    SET_LED LED=Lights RED=1 GREEN=0 BLUE=1 TRANSMIT=1




#############################################
# Status Lights Stealthburner
#############################################

# Macros for setting the status leds on the Voron StealthBurner toolhead (or for any neopixel-type leds).
#
# You will need to configure a neopixel (or other addressable led, such as dotstar). See
# https://www.klipper3d.org/Config_Reference.html#neopixel for configuration details.
#
# CONFIGURATION
#
# Example neopixel configuration:
# [neopixel sb_leds]
# pin: <your pin>
# #   The pin connected to the neopixel. This parameter must be
# #   provided.
# chain_count: 3
# #   The number of Neopixel chips that are "daisy chained" to the
# #   provided pin. The default is 1 (which indicates only a single
# #   Neopixel is connected to the pin).
# color_order: GRBW
# #   Set the pixel order required by the LED hardware. Options are GRB,
# #   RGB, GRBW, or RGBW. The default is GRB.
# initial_RED: 0.0
# initial_GREEN: 0.0
# initial_BLUE: 0.0
# initial_WHITE: 0.0
# #   Sets the initial LED color of the Neopixel. Each value should be
# #   between 0.0 and 1.0. The WHITE option is only available on RGBW
# #   LEDs. The default for each color is 0.#
#
# Most configuration for the macros can be done by modifying the variables in the _sb_vars macro
# at the start of this file. 
#
# MACROS
#
# The following status macros are available:
#    STATUS_READY
#    STATUS_OFF
#    STATUS_BUSY
#    STATUS_HEATING
#    STATUS_LEVELING
#    STATUS_HOMING
#    STATUS_CLEANING
#    STATUS_MESHING
#    STATUS_CALIBRATING_Z
# With additional macros for direct control:
#    SET_NOZZLE_LEDS_ON
#    SET_LOGO_LEDS_OFF
#    SET_NOZZLE_LEDS_OFF
#
# Contributed by Voron discord users wile.e, Tetsunosuke, and etherwalker

[gcode_macro _sb_vars]
# User settings for the StealthBurner status leds. You can change the status colors and led
# configurations for the logo and nozzle here.
variable_colors: {
        'logo': { # Colors for logo states
            'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},
            'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},
            'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},
            'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},
            'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},
            'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},
            'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'printing': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'standby': {'r': 0.01, 'g': 0.01, 'b': 0.01, 'w': 0.1},
        },
        'nozzle': { # Colors for nozzle states
            'busy': {'r': 0.8, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},
            'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},
            'standby': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w':0.1},
        },
        'thermal': {
            'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}
        }
    }
variable_logo_led_name:         "_sb_leds" ### !!! ###
# The name of the addressable LED chain that contains the logo LED(s)
variable_logo_idx:              "1" 
# A comma-separated list of indexes LEDs in the logo
variable_nozzle_led_name:       "_sb_leds" ### !!! ###
# The name of the addressable LED chain that contains the nozzle LED(s). This will
# typically be the same LED chain as the logo.
variable_nozzle_idx:            "2,3"
# A comma-separated list of indexes of LEDs in the nozzle

variable_thermal_config: {
        'extruder': {
            'cool_temp': 40,
            'leds': 'logo',
        },
        'heater_bed': {
            'cool_temp': 40,
            'leds': 'nozzle',
        },
    }
# temperatures at which cooling will be considered complete

gcode:
    ; Do nothing

[gcode_macro _set_sb_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = params.LED|string %}
    {% set idx = (params.IDX|string).split(',') %}
    {% set transmit_last = params.TRANSMIT|default(1) %}
    
    {% for led_index in idx %}
        {% set transmit=transmit_last if loop.last else 0 %}
        set_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}
    {% endfor %}

[gcode_macro _set_sb_leds_by_name]
gcode:
    {% set leds_name = params.LEDS %}
    {% set color_name = params.COLOR %}
    {% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}
    {% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}
    {% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}
    {% set transmit = params.TRANSMIT|default(1) %}

    _set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}

[gcode_macro _set_logo_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = printer["gcode_macro _sb_vars"].logo_led_name %}
    {% set idx = printer["gcode_macro _sb_vars"].logo_idx %}
    {% set transmit=params.TRANSMIT|default(1) %}

    _set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

[gcode_macro _set_nozzle_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}
    {% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}
    {% set transmit=params.TRANSMIT|default(1) %}

    _set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

[gcode_macro set_logo_leds_off]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}

[gcode_macro set_nozzle_leds_on]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}

[gcode_macro set_nozzle_leds_off]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}

[gcode_macro status_off]
gcode:
    set_logo_leds_off transmit=0
    set_nozzle_leds_off

[gcode_macro status_ready]
gcode:
    _set_sb_leds_by_name leds="logo" color="standby" transmit=0
    _set_sb_leds_by_name leds="nozzle" color="standby" transmit=1

[gcode_macro status_busy]
gcode:
    _set_sb_leds_by_name leds="logo" color="busy" transmit=0
    _set_sb_leds_by_name leds="nozzle" color="busy" transmit=1

[gcode_macro status_heating]
gcode:
    _set_sb_leds_by_name leds="logo" color="heating" transmit=0
    _set_sb_leds_by_name leds="nozzle" color="heating" transmit=1

[gcode_macro status_leveling]
gcode:
    _set_sb_leds_by_name leds="logo" color="leveling" transmit=0
    set_nozzle_leds_on

[gcode_macro status_homing]
gcode:
    _set_sb_leds_by_name leds="logo" color="homing" transmit=0
    set_nozzle_leds_on

[gcode_macro status_cleaning]
gcode:
    _set_sb_leds_by_name leds="logo" color="cleaning" transmit=0
    set_nozzle_leds_on

[gcode_macro status_meshing]
gcode:
    _set_sb_leds_by_name leds="logo" color="meshing" transmit=0
    set_nozzle_leds_on

[gcode_macro status_calibrating_z]
gcode:
    _set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0
    set_nozzle_leds_on

[gcode_macro status_printing]
gcode:
    _set_sb_leds_by_name leds="logo" color="printing" transmit=0
    set_nozzle_leds_on




#############################################
# Initial Lights
#############################################

[delayed_gcode _setlights]
initial_duration: 1
gcode:
        LIGHTS_WHITE
        status_ready




#############################################
# Input Shaper - Automatik
#############################################

[gcode_macro INPUTSHAPER]
gcode:
    SHAPER_CALIBRATE




#############################################
# Permanent Stress-Test all Axis & Heaters
#############################################

[gcode_macro CIRCLE_TEST]
gcode:    
    #parameters
    {%set E = params.E|default(240)|int %}
    {%set T = params.T|default(100)|int %}
    {%set I = params.I|default(25)|int %}
    {%set F = params.F|default(5000)|int %}
    SAVE_GCODE_STATE NAME=SPEEDTEST
    STATUS_CLEANING                                             ; SB Status lights    
    GET_POSITION
    M140 S{T}
    M104 S{E}
    G90
    G1 X123.5 Y10 Z10 F{F}   # Initial
    {% for iteration in range(I|int) %}
        G1 X10 Y112.5 Z112.5 F{F}
        G1 X124 Y218 Z215 F{F}
        G1 X237 Y114 Z112.5 F{F}
        G1 X124 Y10 Z10 F{F}
    {% endfor %}
    G1 X123.5 Y100 Z30 F{F}   # Initial
    M140 S0
    M104 S0
    GET_POSITION
    STATUS_READY                                                ; SB Status lights     
    RESTORE_GCODE_STATE NAME=SPEEDTEST




#############################################
# Heatsoack - Heating up the chamber
#############################################

[gcode_macro HEATSOACK]
gcode:
    {% set TEMP = params.TEMP|default(0)|int %}
    {% set TIME = params.TIME|default(10)|int %}
    M190 S{TEMP}
    STATUS_HEATING                                              ; SB Status lights
    {% if TIME > 0 %}
        {% for _ in range(1, TIME) %}
            G4 P{60000 * 1}
        {% endfor %}
    {% endif %}
    STATUS_READY                                                ; SB Status lights     




#############################################
# Misc
#############################################

[virtual_sdcard]
path: /home/pi/gcode_files


[pause_resume]
recover_velocity: 300.0  ##ERCF


[display_status]    

