# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v2.0. To use this config, the firmware should be compiled for the
# STM32F103 with a "28KiB bootloader" and USB communication. Also,
# select "Enable extra low-level configuration options" and configure
# "GPIO pins to set at micro-controller startup" to "!PA14".

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.


# Build Firmware Images
#######################

# Login to the Raspberry Pi
# Run the following:
# cd ~/klipper
# make menuconfig



## MCU BTT SKR V2
#################

# This file contains common pin mappings for the BigTreeTech SKR 2.
# To use this config, the firmware should be compiled for the
# STM32F407 with a "32KiB bootloader".

# In newer versions of this board shipped in late 2021 the STM32F429
# is used, if this is the case compile for this with a "32KiB bootloader"
# You will need to check the chip on your board to identify which you have.
#
# The "make flash" command does not work on the SKR 2. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR 2
# with that SD card.

# See docs/Config_Reference.md for a description of parameters.

# Note: The initial revision of this board has a flaw that can cause
# damage to itself and other boards. Be sure to verify the board is
# not impacted by this flaw before using it.



## MCU BTT SKR Mini 3 mini V2
#############################

# Ensure that the micro-controller architecture is set to ‘STM32’
# Ensure that the processor model is set to ‘STM32F103’
# Ensure that the Bootloader offset is set to ‘28KiB’
# Ensure that the Clock Reference is set to ‘8 Mhz’
# Ensure that “Enable extra low-level configuration options” is selected.
# Ensure that “Use USB for communication (instead of serial)” is selected.
# Ensure that “GPIO pins to set at micro-controller startup” includes ‘!PA14’.

# Once the configuration is selected, select “Exit” and “Yes” if asked to save the configuration.

# Run the following:

# make clean
# make
# The make command, when completed, creates a firmware file klipper.bin that is store in the folder /home/pi/klipper/out.
# This file need to be copied to the Mini E3 board. The easiest way to do this is to use a GUI like WinSCP on Windows or
# either Cyberduck or scp (from terminal) on Mac to copy the file to your computer.



## RPi as second MCU
####################

# In the menu, set "Microcontroller Architecture" to "Linux process," then save and exit.

# To build and install the new micro-controller code, run:

# sudo service klipper stop
# make flash
# sudo service klipper start



## Klipper Expander
###################

# Connect the board to the host Raspberry Pi via USB.

# This step depends on if your board has firmware on it or not already:

# a) If you have a pre-flashed board: -Install the boot jumper and reset the board. This will put the board into DFU mode.
# b) If you have an unflashed board: - The MCU default's to DFU mode if there is no other firmware installed.

# confirm the board enters DFU mode in step b)
# Connect to your host raspberry pi via SSH

# Run lsusb from the command prompt

# Make sure you see an STM32 in DFU mode listed
# Run dfu-util --list from the command prompt

# note the text inside the [xxxx:yyyy]
# Remove the boot jumper.

# Run CD ~/klipper from the command line to enter the Klipper directory

# Run make menuconfig settings should be:

# 'Enable extra low-level configuration options' is selected
# micro-controller architecture is set to 'STM32'
# processor model is set to 'STM32F042'
# Bootloader offset is set to '28KiB'
# Clock Reference is set to 'Internal clock'
# Communication interface (USB (on PA9/PA10))

# Exit and Save

# Run make clean to clean up the make environment.

# Run make flash FLASH_DEVICE=xxxx:yyyy (using xxxx:yyyy from above)

# After completion ls /dev/serial/by-id/* should return a device begining with /dev/serial/by-id/usb-Klipper_stm32f042x6...

# Your board should now be usable with Klipper.
# Use the example config files to get started Best optioon is to copty the config you want to use into the same
# directory as printer.cfg then add [include NAME_OF_CONFIG.CFG] to the end of your printer.cfg to include the file.



## Seeeduino XIAO
#################

# uncheck extra low-level options
# Architecture: SAMD21/SAMD51
# Processor: SAMD21G18 (Arduino Zero)
# Clock: Internal clock
# Bottloader offset: 8KiB bootloader (Arduino Zero)
# Communication: USB

# make clean
# make

# Short reset two times on Xiao ( orange led on )
# More informations on how to reset for flashing: https://wiki.seeedstudio.com/Seeeduino-XIAO/#enter-bootloader-mode

# Flash XIAO via Putty:
# sudo /usr/local/bin/bossac -i -d -p /dev/ttyACM1 -e -w -v -R --offset=0x2000 out/klipper.bin

# Reboot PI...

# Get serial port via Putty:
# ls /dev/serial/by-id/*



## Rpi Pico
###########

# Your "make menuconfig" screen should look like this for the Pico:

# [ ] Enable extra low-level configuration options
# Micro-controller Architecture (Raspberry Pi RP2040)  --->
# Communication interface (USB)  --->
# Then: make clean; make

# After that, you'll need to plug the Pico into your host Raspberry Pi while holding the boot button down.
# Then (assuming you have no other USB drives and the Pico registers as /dev/sda):

# sudo mount /dev/sda1 /mnt
# sudo cp out/klipper.uf2 /mnt
# sudo umount /mnt
# After that, the Pico will automatically reboot, reflash itself, then re-register for use (no need to unplug/replug).


## ---
######



#############################################
# Includes & Temperature sensor tpyes
#############################################

[include ./macros.cfg]
#[include ./inputshaper.cfg]
[include ./magprobe.cfg]
[include pa_cal.cfg]
[include timelapse.cfg]
[include adaptive_bed_mesh.cfg]

#[include ./expander.cfg]



#############################################
# Exclude Objects in GCode Viewer
#############################################

[exclude_object] 



#############################################
# Boards & Communication & Lights
#############################################

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_35FFD5054254393921892257-if00
restart_method: command

[mcu rpi]
serial: /tmp/klipper_host_mcu

#[mcu pico]
#serial: /dev/serial/by-id/usb-Klipper_rp2040_E66034F71F71A528-if00
#restart_method: command

[mcu expander]
serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_320030000843564636373420-if00
restart_method: command


# Static Output on SKR Mini E3 V2 
[static_digital_output usb_pullup_enable]
pins: !PA14

# Status LED light on Pico when Klipper connects 
#[static_digital_output pico_led]
#pins: pico:gpio25

# Status LED light on Expander when Klipper connects 
[static_digital_output expander_led]
pins: !expander:PA4

[neopixel Lights]
pin: expander:PB1
chain_count: 14
color_order: GRB #GRB, RGB, GRBW or RGBW
initial_RED: 0
initial_GREEN: 0
initial_BLUE: 0

[neopixel _sb_leds]
pin: PA8 #EXP1 plug
chain_count: 3
color_order: GRBW #GRB, RGB, GRBW or RGBW
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0




#############################################
# Printer
#############################################

[printer]
kinematics: corexz
max_velocity: 200
max_accel: 3000
#max_accel_to_decel: 3000
max_z_velocity: 200
max_z_accel: 3000
square_corner_velocity: 4.0

[input_shaper]
shaper_type_x = zv
shaper_freq_x = 49.6
shaper_type_y = mzv
shaper_freq_y = 36.4

[homing_override]
axes: z
set_position_z: 0
gcode:
    STATUS_HOMING
    G90
    G0 Z5 F500
    G28 X0 Y0
    G0 X123.5 Y-18 F5000 #G0 X123.5 Y100 F9000  
    G28 Z0
    G0 Z15 F4000
    G0 Y100 F5000
    STATUS_READY    

[idle_timeout]
gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 1800
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.



#####################################################################
#	Thermistor definitions
#####################################################################

#   Variantes:
#   Trianglelab NTC100K B3950 (Beta 3950 used in LDO kits)
#   EPCOS 100K B57560G104F (glas perle sensor - V6)
#   ATC Semitec 104GT-2
#   ATC Semitec 104NT-4-R025H42G (Revo)
#   Generic 3950
#   Honeywell 100K 135-104LAG-J01
#   NTC 100K MGB18-104F39050L32 (Keenovo Heater Bed)
#   SliceEngineering 450
#   TDK NTCG104LH104JT1
#   AD595
#   PT100 INA826
#   PT1000
#   temperature_host
#   temperature_mcu
#  
#   For more information: https://www.klipper3d.org/Config_Reference.html#temperature_sensor
#  
# Footnote about Beta 3950:
# https://github.com/Klipper3d/klipper/issues/4054
# https://github.com/Klipper3d/klipper/pull/4859

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[thermistor chamber_temp]
temperature1: 25
resistance1: 10000
beta: 3950

# [temperature_sensor chamber_SB]
# sensor_type: chamber_temp
# sensor_pin: PA2 #on TFT - Timmit99 Board
# min_temp: 0
# max_temp: 100
# gcode_id: C

[temperature_sensor chamber]
sensor_pin: expander:PA6
# sensor_type: ATC Semitec 104GT-2
sensor_type: EPCOS 100K B57560G104F
min_temp: 10
max_temp: 100

#[temperature_sensor xxx]
#sensor_type: chamber_temp
#sensor_pin: PA3 #on TFT - Timmit99 Board
#min_temp: 0
#max_temp: 100
#gcode_id: C

#[temperature_sensor expander]
#sensor_type: temperature_mcu
#sensor_mcu: expander
#min_temp: 10
#max_temp: 100

#[temperature_sensor pico]
#sensor_type: temperature_mcu
#sensor_mcu: pico
#min_temp: 10
#max_temp: 100




#############################################
# Fans
#############################################

[fan]
pin: PC6

[heater_fan Extruder_Fan]
pin: PC7
max_power: 1.0
kick_start_time: 0.100
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

[temperature_fan _MCU_TMC2209]
pin: expander:PA3
max_power: 1.0
kick_start_time: 0.100
sensor_type: ATC Semitec 104GT-2
sensor_pin: expander:PA5
control: watermark
min_temp: 10
max_temp: 100
target_temp: 32.0
max_speed: 1.0
min_speed: 0.3

[fan_generic nevermore]
pin: expander:PA2
max_power: 1.0




#############################################
# Bed & Z-Probe & Bed-Mesh & Homing
#############################################

[heater_bed]
heater_pin: PC9
sensor_type: TDK NTCG104LH104JT1
sensor_pin: PC3
pwm_cycle_time: 0.02
min_temp: 0
max_power: 1
max_temp: 115
control = pid
## 100°C
pid_kp = 60.695
pid_ki = 1.073
pid_kd = 858.069

[probe]
pin: ^PC2
x_offset:  0.00
y_offset: 27 #25.00
##
#z_offset = 4.610
##
speed: 5 #40
samples: 3
sample_retract_dist: 2.0
lift_speed: 40
samples_result: median #average
samples_tolerance: 0.05 #0.100
samples_tolerance_retries: 6 #3

[bed_mesh]
speed: 150
horizontal_move_z: 8
mesh_min: 15,13.0 #15, 25.0 #18,30.0 #15,25.0
mesh_max: 232.0,215 # 232.0,210 #232.0,225 #232.0,203
probe_count: 9,9 #4,4 #5,5
##relative_reference_index, for example 3x3 mesh
## [(3x3)-1] / 2 = 4
#relative_reference_index: 40 #5 #6, 9, 10
mesh_pps: 3,3 #2,2
algorithm: bicubic
move_check_distance: 3.0
split_delta_z: .010
fade_start: 1
fade_end: 5.0
fade_target: 0

 


#############################################
# Steppers
#############################################

[stepper_x]
step_pin: PB13
dir_pin: PB12
enable_pin: !PB14
endstop_pin: ^PC0
position_endstop: 247
position_min: 0
position_max: 247
homing_speed: 70
homing_positive_dir: true
rotation_distance: 40
full_steps_per_rotation: 200
microsteps: 16

[stepper_y]
step_pin: PB10
dir_pin: PB2
enable_pin: !PB11
endstop_pin: ^PC1
position_endstop: 232 #236
position_min: -25 #0
position_max: 232 #240
homing_speed: 70
homing_positive_dir: true
rotation_distance: 40
full_steps_per_rotation: 200
microsteps: 16

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
#endstop_pin: probe:z_virtual_endstop
endstop_pin: ^PC13 #z-min Microswitch
#position_endstop: -1.65 #-8.6
position_max: 225
homing_speed: 20
position_min: -10 #-3
rotation_distance: 40
full_steps_per_rotation: 200
microsteps: 16

[extruder]
max_extrude_only_distance: 100
max_extrude_cross_section: 13 # mm²/sec for V6  #0.8
step_pin: PB3
dir_pin: PB4
enable_pin: !PD2
gear_ratio: 50:17 # ClockWork1 / 50:10 ClockWork2
rotation_distance: 22.97121882
full_steps_per_rotation: 200
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.75
pressure_advance_smooth_time: 0.040
heater_pin: PC8
min_temp: 0
max_temp: 270
max_power: 1.0
sensor_type: Generic 3950 # BIQU Silberhuelse
#sensor_type: ATC Semitec 104NT-4-R025H42G # Revo
sensor_pin: PA0
#control = pid
# 240°C
#control = pid
#pid_kp = 26.567
#pid_ki = 1.540
#pid_kd = 114.570



#############################################
# TMC Stepper Controllers
#############################################

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.55
#hold_current: 0.35
interpolate: False
#interpolate: True
stealthchop_threshold: 0 #250

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.6
#hold_current: 0.3
interpolate: False
#interpolate: True
stealthchop_threshold: 0 #250

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.55
#hold_current: 0.35
interpolate: False
#interpolate: True
stealthchop_threshold: 0 #250

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.7
hold_current: 0.3
interpolate: False




#############################################
# PA Script
#############################################

[save_variables]
filename: ~/klipper_config/saved_variables.cfg



#####################################################################
# 	Debugging
#####################################################################

[respond]


#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.131250, -0.093750, -0.062500, -0.037500, -0.031250, -0.056250, -0.056250
#*# 	  -0.081250, -0.018750, -0.012500, 0.012500, 0.006250, 0.031250, -0.043750
#*# 	  -0.081250, -0.068750, -0.025000, 0.000000, 0.006250, -0.031250, -0.056250
#*# 	  -0.056250, -0.056250, -0.050000, 0.000000, 0.006250, 0.018750, -0.043750
#*# 	  -0.068750, -0.081250, -0.050000, -0.025000, -0.006250, -0.018750, -0.043750
#*# 	  -0.068750, -0.031250, -0.025000, -0.000000, 0.031250, 0.043750, -0.043750
#*# 	  -0.056250, -0.043750, -0.012500, 0.037500, 0.043750, -0.006250, -0.031250
#*# tension = 0.2
#*# min_x = 15.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 3
#*# min_y = 13.0
#*# x_count = 7
#*# max_y = 214.96
#*# mesh_x_pps = 3
#*# max_x = 231.96
#*#
#*# [stepper_z]
#*# position_endstop = -3.720
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 16.911
#*# pid_ki = 0.692
#*# pid_kd = 103.369
#*#
#*# [probe]
#*# z_offset = 4.760
